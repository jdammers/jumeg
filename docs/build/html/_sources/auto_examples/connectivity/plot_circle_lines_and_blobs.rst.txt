
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/connectivity/plot_circle_lines_and_blobs.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_connectivity_plot_circle_lines_and_blobs.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_connectivity_plot_circle_lines_and_blobs.py:


=============
Plot centrality indices on connectivity circle plot
=============

Script to show functionality to plot centrality indices along with
connectivity circle plot.

.. GENERATED FROM PYTHON SOURCE LINES 9-44



.. image-sg:: /auto_examples/connectivity/images/sphx_glr_plot_circle_lines_and_blobs_001.png
   :alt: Eigen vector centrality: Coh,alpha
   :srcset: /auto_examples/connectivity/images/sphx_glr_plot_circle_lines_and_blobs_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/praveen.sripad/seafile/repolib/mne/jumeg/jumeg/connectivity/con_viz.py:1261: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      c = ax.scatter(theta, radii, c=reordered_colors, s=degrees * degsize,
    /Users/praveen.sripad/seafile/repolib/mne/jumeg/examples/connectivity/plot_circle_lines_and_blobs.py:43: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
      fig.tight_layout()






|

.. code-block:: default


    import os.path as op
    import numpy as np
    import matplotlib.pyplot as plt
    import mne
    from mne_connectivity import degree
    from jumeg import get_jumeg_path
    from jumeg.connectivity import plot_degree_circle, plot_lines_and_blobs

    import bct
    import yaml

    orig_labels_fname = op.join(get_jumeg_path(), 'data/desikan_label_names.yaml')
    yaml_fname = op.join(get_jumeg_path(), 'data/desikan_aparc_cortex_based_grouping.yaml')
    con_fname = op.join(get_jumeg_path(), 'data/sample,aparc-con.npy')

    replacer_dict_fname = op.join(get_jumeg_path(), 'data/replacer_dictionaries.yaml')

    with open(replacer_dict_fname, 'r') as f:
        replacer_dict = yaml.safe_load(f)['replacer_dict_aparc']

    # real connectivity
    con = np.load(con_fname)
    con = con[0, :, :, 2] + con[0, :, :, 2].T
    degrees = degree(con, threshold_prop=0.2)

    eigenvec_centrality = bct.eigenvector_centrality_und(con)

    fig, ax = plot_lines_and_blobs(con, degrees, yaml_fname,
                                   orig_labels_fname, replacer_dict=replacer_dict,
                                   figsize=(8, 8), show_node_labels=False,
                                   show_group_labels=True, n_lines=100,
                                   out_fname=None, degsize=10)
    ax.set_title('Eigen vector centrality: Coh,alpha')
    fig.tight_layout()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.099 seconds)


.. _sphx_glr_download_auto_examples_connectivity_plot_circle_lines_and_blobs.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_circle_lines_and_blobs.py <plot_circle_lines_and_blobs.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_circle_lines_and_blobs.ipynb <plot_circle_lines_and_blobs.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
