
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/decompose/plot_data_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_decompose_plot_data_distribution.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_decompose_plot_data_distribution.py:


==========
Plot data distribution
==========

Example script to plot a given data distribution compared with a standard
Gaussian distribution.

.. GENERATED FROM PYTHON SOURCE LINES 10-41



.. image-sg:: /auto_examples/decompose/images/sphx_glr_plot_data_distribution_001.png
   :alt: Data Distribution
   :srcset: /auto_examples/decompose/images/sphx_glr_plot_data_distribution_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Opening raw data file /Users/praveen.sripad/nanna_data/mne_data/MNE-sample-data/MEG/sample/sample_audvis_filt-0-40_raw.fif...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
            Average EEG reference (1 x 60)  idle
        Range : 6450 ... 48149 =     42.956 ...   320.665 secs
    Ready.
    Not setting metadata
    72 matching events found
    Setting baseline interval to [-0.19979521315838786, 0.0] s
    Applying baseline correction (mode: mean)
    Created an SSP operator (subspace dimension = 3)
    4 projection items activated
    Loading data for 72 events and 106 original time points ...
        Rejecting  epoch based on MAG : ['MEG 1711']
    1 bad epochs dropped
    Data of shape (71, 102, 106) will be flattened.






|

.. code-block:: default


    import os.path as op
    import matplotlib.pyplot as plt
    import mne
    from mne.datasets import sample
    from jumeg.jumeg_plot import plot_histo_fit_gaussian

    data_path = sample.data_path()
    subjects_dir = op.join(data_path, 'subjects')

    fname_raw = op.join(data_path, 'MEG/sample/sample_audvis_filt-0-40_raw.fif')
    fname_event = op.join(data_path, 'MEG/sample/sample_audvis_filt-0-40_raw-eve.fif')

    raw = mne.io.read_raw_fif(fname_raw)
    events = mne.read_events(fname_event)

    # add a bad channel
    raw.info['bads'] += ['MEG 2443']

    # pick MEG channels
    picks = mne.pick_types(raw.info, meg='mag', eeg=False, stim=False, eog=False,
                           exclude='bads')

    # Define epochs for left-auditory condition
    event_id, tmin, tmax = 1, -0.2, 0.5
    epochs = mne.Epochs(raw, events, event_id, tmin, tmax, picks=picks,
                        baseline=(None, 0), reject=dict(mag=4e-12))

    data = epochs.get_data()

    fig = plot_histo_fit_gaussian(data, nbins=100, fnout=None, show=True)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.810 seconds)


.. _sphx_glr_download_auto_examples_decompose_plot_data_distribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_data_distribution.py <plot_data_distribution.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_data_distribution.ipynb <plot_data_distribution.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
